# parameters:
#   - name: environment
#     displayName: Omgeving
#     type: string
#     default: Dev
#     values:
#     - Dev
#     - Test
#     - Acc
#     - Prod

trigger:
  branches:
    include:
    - main
    # - feature/*

pr: none

variables:
  vmImage: ubuntu-latest
  # containerRegistryUrl: acrkeyclkoweu01.azurecr.io
  # containerRepository: bitnami/keycloak
  # helmChartRepository: 'https://charts.bitnami.com/bitnami'
  # helmChartName: bitnami/keycloak
  # helmChartVersion: 24.2.2
  # releaseName: keycloak
  tags: # will be set by script
  tag: # will be set by script
  System.debug: true

stages:
- stage: Build
  displayName: Build and publish Keycloak theme
  condition: and(succeeded(), eq(variables['Build.Reason'], 'IndividualCI'))
  # variables:
    # dockerConfigCache: $(Pipeline.Workspace)/docker
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - bash: |
        # set date to get correct system datetime
        sudo timedatectl set-timezone 'Europe/Amsterdam'
        echo "buildtimestamp: $(buildTimeStamp)"
      displayName: 'Vars'
    
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - bash: |
        npm ci
      displayName: 'Install dependencies'
    
    - bash: |
        npm run copy
        npm run clean
      displayName: 'Build app'

    # - task: GitHubRelease@1
    #   inputs:
    #     gitHubConnection: 'Gemeente-DenHaag'
    #     repositoryName: '$(Build.Repository.Name)'
    #     action: 'create'
    #     target: '$(Build.SourceVersion)'
    #     tagSource: 'gitTag'
    #     addChangeLog: false

    # - task: AzureCLI@2
    #   displayName: 'Build and push images to ACR'
    #   inputs:
    #     addSpnToEnvironment: true
    #     failOnStderr: true
    #     azureSubscription: 'sc-keyclk-p-01_Service_Principal'
    #     scriptType: 'bash'
    #     scriptPath: 'scripts/build-push-images.sh'

# - stage: DeployToDev
#   displayName: Deploy image to Dev
#   condition: and(eq('${{ parameters.environment }}', 'Dev'), eq(variables['Build.Reason'], 'Manual'))
#   variables:
#     kubernetesServiceConnection: sc-aks-saks-o-weu-01-keyclk-o
#     namespace: keyclk-o
#   jobs:
#   - deployment: Deploy_to_Dev
#     pool:
#       vmImage: $(vmImage)
#     environment: $(releaseName)-Dev
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - checkout: self

#           - task: HelmDeploy@0
#             displayName: 'Add helm repo'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'repo'
#               arguments: 'add bitnami $(helmChartRepository)'

#           - task: HelmDeploy@0
#             displayName: 'Deploy with helm'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'upgrade'
#               chartType: 'Name'
#               chartName: '$(helmChartName)'
#               releaseName: '$(releaseName)'
#               install: true
#               waitForExecution: true
#               arguments: '-f infra26/values.yaml -f infra26/values-dev.yaml --version 24.3.0'

# - stage: DeployToTest
#   displayName: Deploy image to Test
#   condition: and(eq('${{ parameters.environment }}', 'Test'), eq(variables['Build.Reason'], 'Manual'))
#   variables:
#     kubernetesServiceConnection: sc-aks-saks-t-weu-01-keyclk-t
#     namespace: keyclk-t
#   jobs:
#   - deployment: Deploy_to_Test
#     pool:
#       vmImage: $(vmImage)
#     environment: $(releaseName)-Test
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - checkout: self

#           - task: HelmDeploy@0
#             displayName: 'Add helm repo'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'repo'
#               arguments: 'add bitnami $(helmChartRepository)'

#           - task: HelmDeploy@0
#             displayName: 'Deploy with helm'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'upgrade'
#               chartType: 'Name'
#               chartName: '$(helmChartName)'
#               releaseName: '$(releaseName)'
#               install: true
#               waitForExecution: true
#               arguments: '-f infra26/values.yaml -f infra26/values-test.yaml --version $(helmChartVersion)'

# - stage: DeployToAcc
#   displayName: Deploy image to Acc
#   condition: and(eq('${{ parameters.environment }}', 'Acc'), eq(variables['Build.Reason'], 'Manual'))
#   variables:
#     kubernetesServiceConnection: sc-aks-saks-a-weu-01-keyclk-a
#     namespace: keyclk-a
#   jobs:
#   - deployment: Deploy_to_Acc
#     pool:
#       vmImage: $(vmImage)
#     environment: $(releaseName)-Acc
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - checkout: self

#           - task: HelmDeploy@0
#             displayName: 'Add helm repo'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'repo'
#               arguments: 'add bitnami $(helmChartRepository)'

#           - task: HelmDeploy@0
#             displayName: 'Deploy with helm'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'upgrade'
#               chartType: 'Name'
#               chartName: '$(helmChartName)'
#               releaseName: '$(releaseName)'
#               install: true
#               waitForExecution: true
#               arguments: '-f infra26/values.yaml -f infra26/values-acc.yaml --version $(helmChartVersion)'

# - stage: DeployToProd
#   displayName: Deploy image to Prod
#   condition: and(eq('${{ parameters.environment }}', 'Prod'), eq(variables['Build.Reason'], 'Manual'))
#   variables:
#     kubernetesServiceConnection: sc-aks-saks-p-weu-01-keyclk-p
#     namespace: keyclk-p
#   jobs:
#   - deployment: Deploy_to_Prod
#     pool:
#       vmImage: $(vmImage)
#     environment: $(releaseName)-Prod
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - checkout: self

#           - task: HelmDeploy@0
#             displayName: 'Add helm repo'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'repo'
#               arguments: 'add bitnami $(helmChartRepository)'

#           - task: HelmDeploy@0
#             displayName: 'Deploy with helm'
#             inputs:
#               connectionType: 'Kubernetes Service Connection'
#               kubernetesServiceConnection: '${{ variables.kubernetesServiceConnection }}'
#               namespace: '$(namespace)'
#               command: 'upgrade'
#               chartType: 'Name'
#               chartName: '$(helmChartName)'
#               releaseName: '$(releaseName)'
#               install: true
#               waitForExecution: true
#               arguments: '-f infra26/values.yaml -f infra26/values-prd.yaml --version $(helmChartVersion)'
              
