trigger:
  branches:
    include:
    - main
    - refs/tags/*

pr: none

variables:
  vmImage: ubuntu-latest
  # isGitTag: $[coalesce(variables['System.PullRequest.TargetBranch'], replace(variables['Build.SourceBranch'], 'refs/heads/', ''))] # Get pullrequest branch, otherwise normal branch and strip refs/heads/
  System.debug: true

stages:
- stage: Build
  displayName: Build and publish Keycloak theme
  condition: and(succeeded(), eq(variables['Build.Reason'], 'IndividualCI'))
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - bash: |
        # set date to get correct system datetime
        sudo timedatectl set-timezone 'Europe/Amsterdam'
        echo "buildtimestamp: $(buildTimeStamp)"
      displayName: 'Vars'
    
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - bash: |
        npm ci
      displayName: 'Install dependencies'
    
    - bash: |
        npm run copy
        npm run clean
      displayName: 'Build app'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/denhaagtheme'
        includeRootFolder: true
        archiveType: 'tar'
        ${{ if eq(variables['Build.SourceBranch'], 'refs/tags/') }}:
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName).tar.gz'
        ${{ else }}:
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar.gz'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: GitHubRelease@1
      condition: contains(variables['Build.SourceBranch'], 'refs/tags/')
      inputs:
        gitHubConnection: 'landingzone zaakgericht werken'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        assets: '$(Build.ArtifactStagingDirectory)'
        addChangeLog: false